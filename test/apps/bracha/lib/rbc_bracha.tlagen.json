{
    "module_name": "BrachaRBC",
    "functions": [
        {
            "function_name": "handle_input",
            "process": "handle_input \\in AN",
            "extensions": [
                "Naturals",
                "FiniteSets",
                "Sequences",
                "TLC"
            ],
            "constants": [
                "CN",
                "FN",
                "Value",
                "NotValue",
                "NULL"
            ],
            "global_variables": [
                {
                    "name": "bcNode",
                    "assignment_lines": [
                        "\\in AN"
                    ]
                },
                {
                    "name": "rbcs",
                    "assignment_lines": [
                        "= [node_id \\in AN |->",
                        "[n |-> N,",
                        "f |-> F,",
                        "me |-> node_id,",
                        "peers |-> AN,",
                        "broadcaster |-> bcNode,",
                        "predicate |-> [v \\in AllValues |-> TRUE],",
                        "max_msg_size |-> 1000,",
                        "propose_sent |-> FALSE,",
                        "msg_recv |-> [msg_from_node_id \\in AN |-> [msg_type \\in MsgTypes |-> FALSE]],",
                        "echo_sent |-> FALSE,",
                        "echo_recv |-> [echo_value \\in AllValues |-> [x \\in AN |-> FALSE]],",
                        "ready_sent |-> FALSE,",
                        "ready_recv |-> [ready_value \\in AllValues |-> [x \\in AN |-> FALSE]],",
                        "output |-> NULL]]"
                    ]
                },
                {
                    "name": "input",
                    "assignment_lines": [
                        "\\in (CASE bcNode \\in CN -> Value [] bcNode \\in FN -> {NotValue})"
                    ]
                },
                {
                    "name": "msgs",
                    "assignment_lines": [
                        "= [node_id \\in AN |-> {}]"
                    ]
                }
            ],
            "local_variables": [
                {
                    "name": "rbc",
                    "assignment_lines": [
                        "= rbcs[self]"
                    ]
                }
            ],
            "definitions": [
                "AN  == CN \\cup FN",
                "N == Cardinality(AN)",
                "F == Cardinality(FN)",
                "AllValues == Value \\cup {NotValue}",
                "MsgTypes == {\"PROPOSE\", \"ECHO\", \"READY\"}"
            ]
        },
        {
            "function_name": "handle_propose_message",
            "process": "handle_propose_message \\in AN",
            "extensions": [
                "Naturals",
                "FiniteSets",
                "Sequences",
                "TLC"
            ],
            "constants": [
                "CN",
                "FN",
                "Value",
                "NotValue",
                "NULL"
            ],
            "global_variables": [
                {
                    "name": "bcNode",
                    "assignment_lines": [
                        "\\in AN"
                    ]
                },
                {
                    "name": "from",
                    "assignment_lines": [
                        "= bcNode"
                    ]
                },
                {
                    "name": "value",
                    "assignment_lines": [
                        "\\in (CASE from \\in CN -> Value [] from \\in FN -> {NotValue})"
                    ]
                },
                {
                    "name": "echoSent",
                    "assignment_lines": [
                        "\\in BOOLEAN"
                    ]
                },
                {
                    "name": "rbcs",
                    "assignment_lines": [
                        "= [node_id \\in AN |->",
                        "[n |-> N,",
                        "f |-> F,",
                        "me |-> node_id,",
                        "peers |-> AN,",
                        "broadcaster |-> bcNode,",
                        "predicate |-> [v \\in AllValues |-> TRUE],",
                        "max_msg_size |-> 1000,",
                        "propose_sent |-> FALSE,",
                        "msg_recv |-> [msg_from_node_id \\in AN |-> [msg_type \\in MsgTypes |-> FALSE]],",
                        "echo_sent |-> echoSent,",
                        "echo_recv |-> [echo_value \\in AllValues |-> [x \\in AN |-> FALSE]],",
                        "ready_sent |-> FALSE,",
                        "ready_recv |-> [ready_value \\in AllValues |-> [x \\in AN |-> FALSE]],",
                        "output |-> NULL]]"
                    ]
                },
                {
                    "name": "msgs",
                    "assignment_lines": [
                        "= [node_id \\in AN |-> {}]"
                    ]
                },
                {
                    "name": "_msg",
                    "assignment_lines": [
                        "= <<\"PROPOSE\", from, value>>"
                    ]
                }
            ],
            "local_variables": [
                {
                    "name": "rbc",
                    "assignment_lines": [
                        "= rbcs[self]"
                    ]
                }
            ],
            "definitions": [
                "AN  == CN \\cup FN",
                "N == Cardinality(AN)",
                "F == Cardinality(FN)",
                "MsgTypes == {\"PROPOSE\", \"ECHO\", \"READY\"}",
                "AllValues == Value \\cup {NotValue}"
            ]
        },
        {
            "function_name": "handle_echo_message",
            "process": "handle_echo_message \\in AN",
            "extensions": [
                "Naturals",
                "FiniteSets",
                "Sequences",
                "TLC"
            ],
            "constants": [
                "CN",
                "FN",
                "Value",
                "NotValue",
                "NULL"
            ],
            "global_variables": [
                {
                    "name": "bcNode",
                    "assignment_lines": [
                        "\\in AN"
                    ]
                },
                {
                    "name": "from",
                    "assignment_lines": [
                        "\\in CN"
                    ]
                },
                {
                    "name": "value",
                    "assignment_lines": [
                        "\\in (CASE bcNode \\in CN -> Value [] bcNode \\in FN -> {NotValue})"
                    ]
                },
                {
                    "name": "echoRecvValue",
                    "assignment_lines": [
                        "\\in BOOLEAN \\cup {NULL}"
                    ]
                },
                {
                    "name": "echoRecv",
                    "assignment_lines": [
                        "= [echo_value \\in AllValues |-> [x \\in AN |-> echoRecvValue]]"
                    ]
                },
                {
                    "name": "readySent",
                    "assignment_lines": [
                        "= ReadySent(echoRecv)"
                    ]
                },
                {
                    "name": "rbcs",
                    "assignment_lines": [
                        "= [node_id \\in AN |->",
                        "[n |-> N,",
                        "f |-> F,",
                        "me |-> node_id,",
                        "peers |-> AN,",
                        "broadcaster |-> bcNode,",
                        "predicate |-> [v \\in AllValues |-> TRUE],",
                        "max_msg_size |-> 1000,",
                        "propose_sent |-> FALSE,",
                        "msg_recv |-> [msg_from_node_id \\in AN |-> [msg_type \\in MsgTypes |-> FALSE]],",
                        "echo_sent |-> FALSE,",
                        "echo_recv |-> echoRecv,",
                        "ready_sent |-> readySent,",
                        "ready_recv |-> [ready_value \\in AllValues |-> [x \\in AN |-> FALSE]],",
                        "output |-> NULL]]"
                    ]
                },
                {
                    "name": "msgs",
                    "assignment_lines": [
                        "= [node_id \\in AN |-> {}]"
                    ]
                },
                {
                    "name": "_msg",
                    "assignment_lines": [
                        "= <<\"ECHO\", from, value>>"
                    ]
                }
            ],
            "local_variables": [
                {
                    "name": "rbc",
                    "assignment_lines": [
                        "= rbcs[self]"
                    ]
                }
            ],
            "definitions": [
                "AN  == CN \\cup FN",
                "N == Cardinality(AN)",
                "F == Cardinality(FN)",
                "MsgTypes == {\"PROPOSE\", \"ECHO\", \"READY\"}",
                "AllValues == Value \\cup {NotValue}",
                "EchosCount(echo_recv) == Cardinality({an \\in AN : echo_recv[value][an] = TRUE})",
                "ReadySent(echo_recv) == EchosCount(echo_recv) > ((N + F) \\div 2)"
            ]
        },
        {
            "function_name": "handle_ready_message",
            "process": "handle_ready_message \\in AN",
            "extensions": [
                "Naturals",
                "FiniteSets",
                "Sequences",
                "TLC"
            ],
            "constants": [
                "CN",
                "FN",
                "Value",
                "NotValue",
                "NULL"
            ],
            "global_variables": [
                {
                    "name": "bcNode",
                    "assignment_lines": [
                        "\\in AN"
                    ]
                },
                {
                    "name": "from",
                    "assignment_lines": [
                        "\\in AN"
                    ]
                },
                {
                    "name": "value",
                    "assignment_lines": [
                        "\\in (CASE bcNode \\in CN -> Value [] bcNode \\in FN -> {NotValue})"
                    ]
                },
                {
                    "name": "readyRecvValue",
                    "assignment_lines": [
                        "\\in BOOLEAN \\cup {NULL}"
                    ]
                },
                {
                    "name": "readyRecv",
                    "assignment_lines": [
                        "= [v \\in AllValues |-> [x \\in AN |-> readyRecvValue]]"
                    ]
                },
                {
                    "name": "readySent",
                    "assignment_lines": [
                        "= ReadySent(readyRecv)"
                    ]
                },
                {
                    "name": "rbcs",
                    "assignment_lines": [
                        "= [node_id \\in AN |->",
                        "[n |-> N,",
                        "f |-> F,",
                        "me |-> node_id,",
                        "peers |-> AN,",
                        "broadcaster |-> bcNode,",
                        "predicate |-> [v \\in AllValues |-> TRUE],",
                        "max_msg_size |-> 1000,",
                        "propose_sent |-> FALSE,",
                        "msg_recv |-> [msg_from_node_id \\in AN |-> [msg_type \\in MsgTypes |-> FALSE]],",
                        "echo_sent |-> FALSE,",
                        "echo_recv |-> [echo_value \\in AllValues |-> [x \\in AN |-> FALSE]],",
                        "ready_sent |-> readySent,",
                        "ready_recv |-> readyRecv,",
                        "output |-> NULL]]"
                    ]
                },
                {
                    "name": "msgs",
                    "assignment_lines": [
                        "= [node_id \\in AN |-> {}]"
                    ]
                },
                {
                    "name": "_msg",
                    "assignment_lines": [
                        "= <<\"READY\", from, value>>"
                    ]
                }
            ],
            "local_variables": [
                {
                    "name": "rbc",
                    "assignment_lines": [
                        "= rbcs[self]"
                    ]
                }
            ],
            "definitions": [
                "AN  == CN \\cup FN",
                "N == Cardinality(AN)",
                "F == Cardinality(FN)",
                "MsgTypes == {\"PROPOSE\", \"ECHO\", \"READY\"}",
                "AllValues == Value \\cup {NotValue}",
                "ReadyCount(ready_recv) == Cardinality({an \\in AN : ready_recv[value][an] = TRUE})",
                "ReadySent(ready_recv) == ReadyCount(ready_recv) > (F * 3)"
            ]
        }
    ]
}